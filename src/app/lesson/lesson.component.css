::ng-deep nb-layout-column {
  padding-top:10px !important;  /* remove inner padding */
  margin-top:10px !important;  

}
::ng-deep nb-layout-column {
  padding-left: 0 !important;   /* remove inner left padding */
  padding-right: 0 !important;  /* remove inner right padding */
  margin-left: 10px !important;    /* remove outer left margin */
  margin-right: 10px !important;   /* remove outer right margin */
  
}



/* === Dashboard Header === */
.dashboard-header {
  display: flex;
  flex-direction: column; /* stack breadbtn + search-container vertically */
  gap: 12px;              /* spacing between rows */
  margin-bottom: 20px;
  margin-top: 2px;  
  padding: 0px;
  margin-top: 1px;
  
}


/* Breadcrumb + button row */
.breadbtn {
  display: flex;
  justify-content: space-between; /* breadcrumb left, button right */
  align-items: center;
  gap: 12px;
  width: 100%;
}

.breadcrumbs-wrapper {
  display: inline-flex; /* keep breadcrumb horizontal */
  align-items: center;
}

/* Button styling */
.header-actions button.primary {
  padding: 5px 14px !important; /* reduce horizontal padding */
  min-width: auto;
  font-weight: normal;
}

/* ================= Search Bar ================= */
.search-container {
  display: flex;
  align-items: center;
  gap: 8px;            
  padding: 10px; 
    /* remove left/right padding */
 margin-top: 1px;            /* remove external margin */
  background: #fff;
  border-radius: 4px;
  width: 100%;           
  min-width: 500px;      
  box-sizing: border-box; /* ensures padding is included in width */
}


.search-input-wrapper {
  position: relative;
  width: 12%;           /* input takes 20% of container */
  min-width: 150px;     /* optional: prevents input from being too small */
}

.search-input-wrapper input {
  width: 100%;          /* fill the wrapper (20% of container) */
  padding: 6px 30px 6px 10px;
  height: 32px;
  border-radius: 4px;

 
  box-sizing: border-box;
}

.search-icon {
  position: absolute;
  right: 10px;
  top: 50%;
  transform: translateY(-50%);
  
  width: 14px;
  height: 14px;
  pointer-events: none;
}




/* === Popup Overlay === */
.popup-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
 
  display: flex;
  justify-content: center;
  align-items: center;
  z-index: 1000;
  padding: 20px;
  box-sizing: border-box;
}

/* === Popup Form === */
.popup-form {
  background: #fff;
  padding: 24px 28px;
  border-radius: 0px;
  width: 380px;
  max-height: 90vh;
  overflow-y: auto;
  display: flex;
  flex-direction: column;
  gap: 12px;
  box-shadow: 0 6px 20px rgba(0,0,0,0.25);
}
.custom-file-upload {
  display: flex;
  align-items: center;
  /* justify-content: center; */
  padding-top: 10px;
  align-items: center;
  
  border: 1px dashed #ccd1db;
  border-radius: 6px;
  cursor: pointer;
  transition: background-color 0.2s, border-color 0.2s;
  font-weight: 300;
  background-color: #f5f6fa;
  
  
 
  gap: 8px;
  margin-top: 3px;
}

.custom-file-upload:hover {
  background-color: #f5f6fa;
  border-color: #0b58de;
}

.custom-file-upload input[type="file"] {
  display: none; 
}

.custom-file-upload nb-icon {
  font-size: 1rem;
  margin-left: 10px;
  margin-bottom: 10px;
}


.actions {
  display: flex;
  gap: 10px;       /* Space between buttons */
  margin-top: 20px;
}

/* Optional: style error messages */
.error {
  color: #ff3860;  /* Bright red */
  font-size: 0.875rem;
  margin-top: 5px;
}

/* Optional: full width inputs */
input[nbInput],
textarea[nbInput],
nb-select {
  width: 100%;
  box-sizing: border-box;
}
.search-label{
  margin-top: 1px;
}

/* Labels styling */
label {
  font-weight: 500;
  margin-top: 15px;
  display: block;
}

/* Optional: add spacing between form fields */
form > * + * {
  margin-top: 10px;
}

.popup-form.delete {
  border-left: none;
}
.popup-form.delete h2 {
  color: #080808;
}
.popup-form.delete .actions button[status="danger"] {
  background-color: #274bdb ;
  border: none;
  color: #fff;
}
.popup-form.delete .actions button[status="danger"]:hover {
  background-color: #274bdb ;
}
.actions {
  display: flex;
  justify-content: flex-end; /* pushes buttons to the right */
  gap: 1rem;                 /* optional: space between buttons */
  margin-top: 1rem;          /* optional: spacing from above content */
}

/* === Lessons Grid === */
.lesson-card {
  position: relative;
  border-radius: 0; /* sharp corners */
  overflow: hidden;
  background: #f7f9fc;
  box-shadow: 0 2px 6px rgba(0,0,0,0.08);
  transition: transform 0.2s ease-in-out;
  width: 280px;      /* fixed width for rectangle */
  height: 380px;     /* fixed height for rectangle */
  display: flex;
  flex-direction: column;
}

.lesson-card:hover {
  transform: translateY(-4px);
}

.lesson-card nb-card-header {
  padding: 0;
  height: 200px;        /* header takes half the card height */
  overflow: hidden;
}

.lesson-card nb-card-header img.lesson-image {
  width: 100%;
  height: 100%;
  object-fit: cover;
  display: block;
  min-height: 10px; 
}

.lesson-card nb-card-body {
  padding: 10px 15px;   /* add some padding for text */
  flex: 1;              /* take remaining space */
  display: flex;
  flex-direction: column;
  justify-content: space-between;
}


/* Lesson Image */
.lesson-image {
  width: 100%;
  height: 150px;
  object-fit: cover;
  border-bottom: 1px solid #eee;
  background: #fff;
}

/* Badge */
.badge {
  position: absolute;
  top: 0;
  right: 0;
  
  color: white;
  font-size: 12px;
  font-weight: 600;
  padding: 2px 8px;
  border-radius: 4PX;
  text-transform: capitalize;
}
.badge.video { background: #FC3565; }
.badge.document { background: #FC3565; }

/* Card Body */
nb-card-body {
  background: white;
  padding: 15px;
  border-radius: 0px;
}
nb-card-body h5 {
  margin: 0 0 8px;
  font-size: 16px;
  font-weight: 600;
  color: #222b45;
}
nb-card-body p {
  font-size: 14px;
  color: #555;
  margin-bottom: 10px;
}

/* Meta Info */
.lesson-meta {
  display: flex;
  align-items: center;
  gap: 10px;
  margin-top: 8px;
  font-size: 13px;
  color: #666;
}

.doc-line {
  display: inline-flex;
  align-items: center;
  gap: 8px;               /* space between icon & text */
  padding-left: 12px;     /* <<< space from the left margin */
}

.doc-text {
  max-width: 100%;
  white-space: nowrap;
  overflow: hidden;
  text-overflow: ellipsis; /* optional: truncate long names */
}



/* Footer Actions */
.icon-only nb-icon {
  margin: 0 6px; /* space between icons */
  font-size: 15px; /* optional: adjust size */
  width: 18px;
  height: 18px;
}

.tiny-icon1 {
 color: #FBCD6E; /* green for edit */
}

.tiny-icon2 {
  color: #DB5F7B; /* red for delete */
}

.tiny-icon3 {
 color:#A7ACBB
}



.footer-actions {
  display: flex;
  justify-content: flex-end;
  align-items: center;
  padding: 6px 10px;
  background: white;
  border-top: 1px solid #eee;
  gap: 20px;
}
.footer-actions button {
  padding: 4px 6px;
  border-radius: 0px;
  transition: background 0.2s;
}
.footer-actions button:hover {
  background: rgba(0,0,0,0.05);
}

button[nbButton].icon-only {
  background: transparent !important;
  background-color: transparent !important;
  border: none !important;
  box-shadow: none !important;
  padding: 0 !important;
}
.error {
  color: red;
  font-size: 12px;
  margin-top: 2px;
}

button[data-tooltip] {
  position: relative;
}

/* Tooltip text */
button[data-tooltip]::after {
  content: attr(data-tooltip);
  position: absolute;
  bottom: 125%; /* position above button */
  left: 50%;
  transform: translateX(-50%);
  background: #1a1a2e; /* dark background */
  color: #fff;
  padding: 5px 8px;
  border-radius: 4px;
  font-size: 12px;
  white-space: nowrap;
  opacity: 0;
  pointer-events: none;
  transition: opacity 0.2s;
}

/* Tooltip arrow */
button[data-tooltip]::before {
  content: "";
  position: absolute;
  bottom: 115%;
  left: 50%;
  transform: translateX(-50%);
  border-width: 5px;
  border-style: solid;
  border-color: #1a1a2e transparent transparent transparent;
  opacity: 0;
  transition: opacity 0.2s;
}

/* Show tooltip on hover */
button[data-tooltip]:hover::after,
button[data-tooltip]:hover::before {
  opacity: 1;
}

.breadbtn {
  display: flex;
  /* breadcrumb left, button right */
  align-items: center;            /* vertical alignment */
  gap: 12px;     
          /* optional spacing */
}

/* Ensure breadcrumbs component behaves correctly inside flex */
.breadcrumbs-wrapper {
  display: inline-flex;           /* force horizontal layout */
  align-items: center;
}

/* Inside breadcrumb component, force horizontal items */
::ng-deep app-breadcrumb .breadcrumbs-nav,
::ng-deep app-breadcrumb .breadcrumb-list,
::ng-deep app-breadcrumb .breadcrumb-item {
  display: inline-flex !important;
  align-items: center !important;
  gap: 6px !important;
  white-space: nowrap !important;
}

/* Anchors and spans inside breadcrumb */
::ng-deep app-breadcrumb a,
::ng-deep app-breadcrumb span {
  display: inline-block !important;
  white-space: nowrap !important;
}
::ng-deep app-breadcrumb a {
  text-decoration: none !important;  /* removes underline */
  color: inherit;                     /* keeps the text color same as normal */
  cursor: pointer;                    /* optional: shows pointer on hover */
}